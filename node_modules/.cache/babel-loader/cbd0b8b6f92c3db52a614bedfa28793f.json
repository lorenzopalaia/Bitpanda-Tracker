{"ast":null,"code":"import axios from \"axios\";\nimport Loading from \"vue-loading-overlay\";\nimport \"vue-loading-overlay/dist/vue-loading.css\";\nexport default {\n  name: \"HomePage\",\n  components: {\n    Loading\n  },\n\n  data() {\n    return {\n      connectionStatus: \"disconnected\",\n      isLoading: false,\n      remember: false,\n      wrongApi: false,\n      internalError: false,\n      apiKey: null,\n      cryptoindexes: null,\n      etfs: null,\n      stocks: null,\n      commodities: null,\n      cryptocoins: null,\n      tickers: null,\n      transactions: null\n    };\n  },\n\n  methods: {\n    async connect() {\n      let uri = \"https://api.bitpanda.com/v1/ticker\";\n      let res = await axios.get(uri).catch(error => {\n        this.isLoading = false;\n        this.connectionStatus = \"disconnected\";\n        if (error.response.status === 500) this.internalError = true;\n        return;\n      });\n\n      if (res.status == 200) {\n        this.tickers = res.data;\n      }\n\n      this.connectionStatus = \"connecting\";\n      this.isLoading = true;\n      this.wrongApi = false;\n      this.internalError = false;\n      uri = 'https://corsproxy.io/?' + encodeURIComponent('https://api.bitpanda.com/v1/asset-wallets');\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-Api-Key\": this.apiKey\n        }\n      };\n      res = await axios.get(uri, config).catch(error => {\n        this.isLoading = false;\n        this.connectionStatus = \"disconnected\";\n        if (error.response.status === 401) this.wrongApi = true;else if (error.response.status === 500) this.internalError = true;\n        return;\n      });\n\n      if (res.status == 200) {\n        this.isLoading = false;\n        this.connectionStatus = \"connected\";\n        if (this.remember) localStorage.setItem(\"apiKey\", this.apiKey);\n        this.etfs = res.data.data.attributes.security.etf.attributes.wallets;\n        this.cryptoindexes = res.data.data.attributes.index.index.attributes.wallets;\n        this.stocks = res.data.data.attributes.security.stock.attributes.wallets;\n        this.commodities = res.data.data.attributes.commodity.metal.attributes.wallets;\n        this.cryptocoins = res.data.data.attributes.cryptocoin.attributes.wallets;\n      }\n\n      uri = 'https://corsproxy.io/?' + encodeURIComponent('https://api.bitpanda.com/v1/wallets/transactions?page_size=100');\n      res = await axios.get(uri, config).catch(error => {\n        if (error.response.status === 500) this.internalError = true;\n        return;\n      });\n\n      if (res.status == 200) {\n        this.transactions = res.data.data;\n        console.log(this.transactions);\n      }\n    },\n\n    disconnect() {\n      this.isLoading = true;\n      localStorage.removeItem(\"apiKey\"); //this.apiKey = null;\n\n      this.connectionStatus = \"disconnected\";\n      this.isLoading = false;\n    },\n\n    getTickerFromId(id) {\n      for (const item of [this.cryptoindexes, this.etfs, this.stocks, this.commodities, this.cryptocoins]) {\n        let found = item.find(elem => elem.attributes.cryptocoin_id === id);\n        if (found !== undefined) return found.attributes.cryptocoin_symbol;\n      }\n\n      return \"NF\";\n    }\n\n  },\n\n  mounted() {\n    this.apiKey = localStorage.getItem(\"apiKey\");\n    if (this.apiKey !== null) this.connect();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["axios","Loading","name","components","data","connectionStatus","isLoading","remember","wrongApi","internalError","apiKey","cryptoindexes","etfs","stocks","commodities","cryptocoins","tickers","transactions","methods","connect","uri","res","get","catch","error","response","status","encodeURIComponent","config","headers","localStorage","setItem","attributes","security","etf","wallets","index","stock","commodity","metal","cryptocoin","console","log","disconnect","removeItem","getTickerFromId","id","item","found","find","elem","cryptocoin_id","undefined","cryptocoin_symbol","mounted","getItem"],"sourceRoot":"","sources":["/Users/lorenzopalaia/Desktop/Bitpanda-Tracker/src/components/HomePage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"text-center\">\n      <img src=\"../assets/imgs/image.png\" alt=\"\" />\n    </div>\n    <div v-if=\"connectionStatus === 'disconnected'\" class=\"row mt-4 text-center\">\n      <div class=\"col-10 col-sm-8 col-md-6 col-lg-4 col-xl-3 mx-auto\">\n        <div v-if=\"wrongApi\" class=\"card bg-danger mb-4\">\n          <div class=\"card-body\">\n            <p class=\"card-text\">Wrong API Key</p>\n          </div>\n        </div>\n        <div v-if=\"internalError\" class=\"card bg-danger mb-4\">\n          <div class=\"card-body\">\n            <p class=\"card-text\">Internal Server Error</p>\n          </div>\n        </div>\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <p class=\"card-text\">API Key</p>\n            <input class=\"apiInput\" v-model=\"apiKey\" type=\"text\" placeholder=\"Bitpanda API Key\" />\n            <div class=\"mt-4\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#27d17f\" class=\"bi bi-square\"\n                viewBox=\"0 0 16 16\" v-if=\"!remember\" @click=\"remember = true\">\n                <path\n                  d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" />\n              </svg>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#27d17f\" class=\"bi bi-check-square\"\n                viewBox=\"0 0 16 16\" v-else @click=\"remember = false\">\n                <path\n                  d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" />\n                <path\n                  d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.235.235 0 0 1 .02-.022z\" />\n              </svg>\n              <p class=\"d-inline m-2\" style=\"color: #27d17f\">Remember</p>\n            </div>\n            <div class=\"btn mt-4 btn-connect\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                class=\"bi bi-arrow-right-square-fill\" viewBox=\"0 0 16 16\">\n                <path\n                  d=\"M0 14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v12zm4.5-6.5h5.793L8.146 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L10.293 8.5H4.5a.5.5 0 0 1 0-1z\" />\n              </svg>\n              <div class=\"btn-text m-2 d-inline\" @click=\"connect\">Connect</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div v-else-if=\"connectionStatus === 'connecting'\">\n      <loading v-model:active=\"isLoading\" :can-cancel=\"false\" :is-full-page=\"true\" color=\"#27d17f\"\n        background-color=\"#000\" loader=\"dots\" />\n    </div>\n    <div v-else>\n      <!-- connected -->\n      <div class=\"text-end\">\n        <div class=\"btn btn-outline-danger btn-disconnect\" @click=\"disconnect\">\n          Disconnect\n        </div>\n      </div>\n      <div v-if=\"cryptoindexes !== null && cryptoindexes.length > 0\">\n        <p class=\"card-text fs-1 m-0\">Cryptoindexes</p>\n        <div class=\"row\">\n          <div v-for=\"crypto in cryptoindexes\" :key=\"crypto.attributes.cryptocoin_id\"\n            class=\"col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-4\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <img :src=\"\n                  'https://ui-avatars.com/api/?background=random&name=' +\n                  crypto.attributes.cryptocoin_symbol +\n                  '&rounded=true&length=10&font-size=0.25'\n                \" alt=\"\" class=\"avatar\" />\n                <div class=\"d-inline m-2\">\n                  <p class=\"card-text d-table-row\">\n                    {{ crypto.attributes.cryptocoin_symbol }}\n                  </p>\n                  <p class=\"card-text d-table-row\">\n                    {{ tickers[crypto.attributes.cryptocoin_symbol][\"USD\"] }}$\n                  </p>\n                </div>\n                <p class=\"card-text semi-bold m-2 fs-4\">\n                  {{ parseFloat(crypto.attributes.balance).toFixed(2) }}$\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-if=\"etfs !== null && etfs.length > 0\">\n        <p class=\"card-text fs-1 m-0 mt-4\">ETF</p>\n        <div class=\"row\">\n          <div v-for=\"etf in etfs\" :key=\"etf.attributes.cryptocoin_id\" class=\"col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-4\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <img :src=\"\n                  'https://ui-avatars.com/api/?background=random&name=' +\n                  etf.attributes.cryptocoin_symbol +\n                  '&rounded=true&length=10&font-size=0.25'\n                \" alt=\"\" class=\"avatar\" />\n                <div class=\"d-inline m-2\">\n                  <p class=\"card-text d-table-row\">\n                    {{ etf.attributes.cryptocoin_symbol }}\n                  </p>\n                </div>\n                <p class=\"card-text semi-bold m-2 fs-4\">\n                  {{ parseFloat(etf.attributes.balance).toFixed(2) }}$\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-if=\"stocks !== null && stocks.length > 0\">\n        <p class=\"card-text fs-1 m-0 mt-4\">Stocks</p>\n        <div class=\"row\">\n          <div v-for=\"stock in stocks\" :key=\"stock.attributes.cryptocoin_id\"\n            class=\"col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-4\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <!-- & encoding not working-->\n                <img :src=\"\n                  'https://ui-avatars.com/api/?background=random&name=' +\n                  stock.attributes.cryptocoin_symbol.replaceAll('&', '%26') +\n                  '&rounded=true&length=10&font-size=0.25'\n                \" alt=\"\" class=\"avatar\" />\n                <div class=\"d-inline m-2\">\n                  <p class=\"card-text d-table-row\">\n                    {{ stock.attributes.cryptocoin_symbol }}\n                  </p>\n                </div>\n                <p class=\"card-text semi-bold m-2 fs-4\">\n                  {{ parseFloat(stock.attributes.balance).toFixed(2) }}$\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-if=\"commodites !== null && commodities.length > 0\">\n        <p class=\"card-text fs-1 m-0 mt-4\">Commodity</p>\n        <div class=\"row\">\n          <div v-for=\"commodity in commodities\" :key=\"commodity.attributes.cryptocoin_id\"\n            class=\"col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-4\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <img :src=\"\n                  'https://ui-avatars.com/api/?background=random&name=' +\n                  commodity.attributes.cryptocoin_symbol +\n                  '&rounded=true&length=10&font-size=0.25'\n                \" alt=\"\" class=\"avatar\" />\n                <div class=\"d-inline m-2\">\n                  <p class=\"card-text d-table-row\">\n                    {{ commodity.attributes.cryptocoin_symbol }}\n                  </p>\n                  <p class=\"card-text d-table-row\">\n                    {{\n                    tickers[commodity.attributes.cryptocoin_symbol][\"USD\"]\n                    }}$\n                  </p>\n                </div>\n                <p class=\"card-text semi-bold m-2 fs-4\">\n                  {{ parseFloat(commodity.attributes.balance).toFixed(2) }}$\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-if=\"cryptocoins !== null && cryptocoins.length > 0\">\n        <p class=\"card-text fs-1 m-0 mt-4\">Cryptocoins</p>\n        <div class=\"row\">\n          <div v-for=\"cryptocoin in cryptocoins\" :key=\"cryptocoin.attributes.cryptocoin_id\"\n            class=\"col-sm-6 col-md-4 col-lg-3 col-xl-2 mt-4\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <img :src=\"\n                  'https://raw.githubusercontent.com/rainner/crypto-icons/main/icons/' +\n                  cryptocoin.attributes.cryptocoin_symbol.toLowerCase() +\n                  '.png'\n                \" alt=\"\" class=\"avatar\" @error=\"\n                  $event.target.src =\n                    'https://ui-avatars.com/api/?background=random&name=' +\n                    cryptocoin.attributes.cryptocoin_symbol +\n                    '&rounded=true&length=10&font-size=0.25'\n                \" />\n                <div class=\"d-inline m-2\">\n                  <p class=\"card-text d-table-row\">\n                    {{ cryptocoin.attributes.cryptocoin_symbol }}\n                  </p>\n                  <p class=\"card-text d-table-row\">\n                    {{\n                    tickers[cryptocoin.attributes.cryptocoin_symbol][\"USD\"]\n                    }}$\n                  </p>\n                </div>\n                <p class=\"card-text semi-bold m-2 fs-4\">\n                  {{ parseFloat(cryptocoin.attributes.balance).toFixed(2) }}$\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-if=\"transactions !== null && transactions.length > 0\">\n        <p class=\"card-text fs-1 m-0 mt-4\">Trades</p>\n        <table class=\"table card-text\">\n          <thead class=\"semi-bold\">\n            <tr>\n              <th scope=\"col\">Trade</th>\n              <th scope=\"col\">Amount</th>\n              <th class=\"d-none d-sm-table-cell\" scope=\"col\">USD Amount</th>\n              <th class=\"d-none d-sm-table-cell\" scope=\"col\">Swap Price</th>\n              <th class=\"d-none d-lg-table-cell\" scope=\"col\">Fee</th>\n              <th class=\"d-none d-md-table-cell\" scope=\"col\">Time</th>\n              <th scope=\"col\">Type</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr scope=\"row\" v-for=\"transaction in transactions\" :key=\"transaction.attributes.trade_id\">\n              <td>\n                <span>\n                  <img :src=\"\n                    'https://raw.githubusercontent.com/rainner/crypto-icons/main/icons/' +\n                    transaction.attributes.cryptocoin_symbol.toLowerCase() +\n                    '.png'\n                  \" alt=\"\" class=\"avatar-mini d-none d-md-inline\" @error=\"\n                    $event.target.src =\n                      'https://ui-avatars.com/api/?background=random&name=' +\n                      transaction.attributes.cryptocoin_symbol +\n                      '&rounded=true&length=10&font-size=0.25'\n                  \" />\n                  <img v-if=\"transaction.attributes.trade\" :src=\"\n                    'https://raw.githubusercontent.com/rainner/crypto-icons/main/icons/' +\n                    getTickerFromId(transaction.attributes.trade.attributes.related_swap_trade.attributes.cryptocoin_id).toLowerCase() +\n                    '.png'\n                  \" alt=\"\" class=\"avatar-mini d-none d-md-inline\" @error=\"\n                    $event.target.src =\n                      'https://ui-avatars.com/api/?background=random&name=' +\n                      getTickerFromId(transaction.attributes.trade.attributes.related_swap_trade.attributes.cryptocoin_id) +\n                      '&rounded=true&length=10&font-size=0.25'\n                  \" />\n                  {{ transaction.attributes.cryptocoin_symbol }}\n                </span>\n                <span class=\"pl-0\" v-if=\"transaction.attributes.trade\">\n                  / {{\n                  getTickerFromId(transaction.attributes.trade.attributes.related_swap_trade.attributes.cryptocoin_id)\n                  }}\n                </span>\n              </td>\n              <td>{{ parseFloat(transaction.attributes.amount).toFixed(2) }}</td>\n              <td class=\"d-none d-sm-table-cell\">\n                <div v-if=\"transaction.attributes.trade\">\n                  {{\n                  (\n                  parseFloat(transaction.attributes.amount) *\n                  parseFloat(\n                  transaction.attributes.trade.attributes.price\n                  )\n                  ).toFixed(2)\n                  }}$\n                </div>\n              </td>\n              <td class=\"d-none d-sm-table-cell\">\n                <div v-if=\"transaction.attributes.trade\">\n                  {{parseFloat(transaction.attributes.trade.attributes.price).toFixed(2) }}$\n                </div>\n              </td>\n              <td class=\"d-none d-lg-table-cell\">{{ parseFloat(transaction.attributes.fee).toFixed(2) }}$</td>\n              <td class=\"d-none d-md-table-cell\">\n                {{\n                new Date(\n                transaction.attributes.time.unix * 1000\n                ).toLocaleTimeString(\"en-US\")\n                }}\n              </td>\n              <td>\n                {{ transaction.attributes.type.toUpperCase() }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Loading from \"vue-loading-overlay\";\nimport \"vue-loading-overlay/dist/vue-loading.css\";\n\nexport default {\n  name: \"HomePage\",\n  components: {\n    Loading,\n  },\n  data() {\n    return {\n      connectionStatus: \"disconnected\",\n      isLoading: false,\n      remember: false,\n      wrongApi: false,\n      internalError: false,\n      apiKey: null,\n      cryptoindexes: null,\n      etfs: null,\n      stocks: null,\n      commodities: null,\n      cryptocoins: null,\n      tickers: null,\n      transactions: null,\n    };\n  },\n  methods: {\n    async connect() {\n      let uri = \"https://api.bitpanda.com/v1/ticker\";\n      let res = await axios.get(uri).catch((error) => {\n        this.isLoading = false;\n        this.connectionStatus = \"disconnected\";\n        if (error.response.status === 500) this.internalError = true;\n        return;\n      });\n      if (res.status == 200) {\n        this.tickers = res.data;\n      }\n\n      this.connectionStatus = \"connecting\";\n      this.isLoading = true;\n      this.wrongApi = false;\n      this.internalError = false;\n      uri = 'https://corsproxy.io/?' + encodeURIComponent('https://api.bitpanda.com/v1/asset-wallets');\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-Api-Key\": this.apiKey,\n        },\n      };\n      res = await axios.get(uri, config).catch((error) => {\n        this.isLoading = false;\n        this.connectionStatus = \"disconnected\";\n\n        if (error.response.status === 401) this.wrongApi = true;\n        else if (error.response.status === 500) this.internalError = true;\n        return;\n      });\n      if (res.status == 200) {\n        this.isLoading = false;\n        this.connectionStatus = \"connected\";\n        if (this.remember) localStorage.setItem(\"apiKey\", this.apiKey);\n        this.etfs = res.data.data.attributes.security.etf.attributes.wallets;\n        this.cryptoindexes =\n          res.data.data.attributes.index.index.attributes.wallets;\n        this.stocks =\n          res.data.data.attributes.security.stock.attributes.wallets;\n        this.commodities =\n          res.data.data.attributes.commodity.metal.attributes.wallets;\n        this.cryptocoins =\n          res.data.data.attributes.cryptocoin.attributes.wallets;\n      }\n\n      uri = 'https://corsproxy.io/?' + encodeURIComponent('https://api.bitpanda.com/v1/wallets/transactions?page_size=100');\n      res = await axios.get(uri, config).catch((error) => {\n        if (error.response.status === 500) this.internalError = true;\n        return;\n      });\n      if (res.status == 200) {\n        this.transactions = res.data.data;\n        console.log(this.transactions);\n      }\n    },\n    disconnect() {\n      this.isLoading = true;\n      localStorage.removeItem(\"apiKey\");\n      //this.apiKey = null;\n      this.connectionStatus = \"disconnected\";\n      this.isLoading = false;\n    },\n    getTickerFromId(id) {\n      for (const item of [this.cryptoindexes, this.etfs, this.stocks, this.commodities, this.cryptocoins]) {\n        let found = item.find((elem) => elem.attributes.cryptocoin_id === id);\n        if (found !== undefined) return (found.attributes.cryptocoin_symbol);\n      }\n      return \"NF\";\n    }\n  },\n  mounted() {\n    this.apiKey = localStorage.getItem(\"apiKey\");\n    if (this.apiKey !== null) this.connect();\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.apiInput {\n  outline: 0;\n  border-width: 0 0 2px;\n  border-color: #27d17f;\n  color: #27d17f;\n  background-color: transparent;\n}\n.checboxInput {\n  outline: 1px solid #27d17f;\n  color: transparent;\n}\n.card {\n  background-color: #282828;\n}\n.card-text {\n  color: white;\n}\n.btn-connect {\n  background-color: #27d17f;\n}\n.btn-text {\n  color: black;\n}\n.avatar {\n  width: 48px;\n  height: 48px;\n  display: inline-block;\n}\n.avatar-mini {\n  width: 24px;\n  height: 24px;\n  display: inline-block;\n}\n.semi-bold {\n  font-family: BR-Candor-SemiBold;\n}\nthead {\n  color: #27d17f;\n}\ntr:hover {\n  color: #27d17f;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}